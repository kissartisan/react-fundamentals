{"code":"(this[\"webpackJsonp@kentcdodds/react-fundamentals\"]=this[\"webpackJsonp@kentcdodds/react-fundamentals\"]||[]).push([[26],{156:function(e,t,n){\"use strict\";n.r(t),t.default='\\x3c!-- Using JSX --\\x3e\\n\\x3c!-- http://localhost:3000/isolated/exercise/03.html --\\x3e\\n\\n<body>\\n  <div id=\"root\"></div>\\n  <script src=\"https://unpkg.com/react@17.0.0/umd/react.development.js\"><\\/script>\\n  <script src=\"https://unpkg.com/react-dom@17.0.0/umd/react-dom.development.js\"><\\/script>\\n\\n  \\x3c!-- \\ud83d\\udca3 remove this line\\n  <script src=\"https://unpkg.com/@babel/standalone@7.12.4/babel.js\"><\\/script>\\n  \\ud83d\\udca3 remove this line --\\x3e\\n\\n  <script type=\"module\">\\n    // \\ud83d\\udc28 on the script tag above, change `type=\"module\"`\\n    // to `type=\"text/babel\"` so babel will compile this code for the browser to run.\\n\\n    // \\ud83d\\udc28 re-implement this using JSX!\\n    const element = React.createElement(\\'div\\', {\\n      className: \\'container\\',\\n      children: \\'Hello World\\',\\n    })\\n\\n    // \\ud83d\\udcb0 there are a few subtle differences between JSX and HTML. One such\\n    // difference is how you apply a class to an element in JSX is by using\\n    // `className` rather than `class`!\\n    // \\ud83d\\udcdc You can learn the differences between JSX and HTML syntax from the React docs here:\\n    // https://reactjs.org/docs/dom-elements.html#differences-in-attributes\\n\\n    ReactDOM.render(element, document.getElementById(\\'root\\'))\\n  <\\/script>\\n</body>\\n'}}]);","name":"static/js/26.208d0990.chunk.js","map":{"version":3,"sources":["static/js/26.208d0990.chunk.js"],"names":["this","push","156","module","__webpack_exports__","__webpack_require__","r"],"mappings":"CAACA,KAAK,8CAAgDA,KAAK,+CAAiD,IAAIC,KAAK,CAAC,CAAC,IAAI,CAErHC,IACA,SAAUC,EAAQC,EAAqBC,GAE7C,aACAA,EAAoBC,EAAEF,GACOA,EAA6B,QAAI"},"input":"(this[\"webpackJsonp@kentcdodds/react-fundamentals\"] = this[\"webpackJsonp@kentcdodds/react-fundamentals\"] || []).push([[26],{\n\n/***/ 156:\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n__webpack_require__.r(__webpack_exports__);\n/* harmony default export */ __webpack_exports__[\"default\"] = (\"<!-- Using JSX -->\\n<!-- http://localhost:3000/isolated/exercise/03.html -->\\n\\n<body>\\n  <div id=\\\"root\\\"></div>\\n  <script src=\\\"https://unpkg.com/react@17.0.0/umd/react.development.js\\\"></script>\\n  <script src=\\\"https://unpkg.com/react-dom@17.0.0/umd/react-dom.development.js\\\"></script>\\n\\n  <!-- üí£ remove this line\\n  <script src=\\\"https://unpkg.com/@babel/standalone@7.12.4/babel.js\\\"></script>\\n  üí£ remove this line -->\\n\\n  <script type=\\\"module\\\">\\n    // üê® on the script tag above, change `type=\\\"module\\\"`\\n    // to `type=\\\"text/babel\\\"` so babel will compile this code for the browser to run.\\n\\n    // üê® re-implement this using JSX!\\n    const element = React.createElement('div', {\\n      className: 'container',\\n      children: 'Hello World',\\n    })\\n\\n    // üí∞ there are a few subtle differences between JSX and HTML. One such\\n    // difference is how you apply a class to an element in JSX is by using\\n    // `className` rather than `class`!\\n    // üìú You can learn the differences between JSX and HTML syntax from the React docs here:\\n    // https://reactjs.org/docs/dom-elements.html#differences-in-attributes\\n\\n    ReactDOM.render(element, document.getElementById('root'))\\n  </script>\\n</body>\\n\");\n\n/***/ })\n\n}]);","inputSourceMap":{"version":3,"sources":["/Users/kissartisan/playground/learn/React/react-fundamentals/node_modules/raw-loader/dist/cjs.js!/Users/kissartisan/playground/learn/React/react-fundamentals/src/exercise/03.html"],"names":[],"mappings":";;;;;;AAAA;AAAe,6vBAA8rB,sEAAsE,4cAA4c,E","file":"x","sourcesContent":["export default \"<!-- Using JSX -->\\n<!-- http://localhost:3000/isolated/exercise/03.html -->\\n\\n<body>\\n  <div id=\\\"root\\\"></div>\\n  <script src=\\\"https://unpkg.com/react@17.0.0/umd/react.development.js\\\"></script>\\n  <script src=\\\"https://unpkg.com/react-dom@17.0.0/umd/react-dom.development.js\\\"></script>\\n\\n  <!-- üí£ remove this line\\n  <script src=\\\"https://unpkg.com/@babel/standalone@7.12.4/babel.js\\\"></script>\\n  üí£ remove this line -->\\n\\n  <script type=\\\"module\\\">\\n    // üê® on the script tag above, change `type=\\\"module\\\"`\\n    // to `type=\\\"text/babel\\\"` so babel will compile this code for the browser to run.\\n\\n    // üê® re-implement this using JSX!\\n    const element = React.createElement('div', {\\n      className: 'container',\\n      children: 'Hello World',\\n    })\\n\\n    // üí∞ there are a few subtle differences between JSX and HTML. One such\\n    // difference is how you apply a class to an element in JSX is by using\\n    // `className` rather than `class`!\\n    // üìú You can learn the differences between JSX and HTML syntax from the React docs here:\\n    // https://reactjs.org/docs/dom-elements.html#differences-in-attributes\\n\\n    ReactDOM.render(element, document.getElementById('root'))\\n  </script>\\n</body>\\n\";"]}}