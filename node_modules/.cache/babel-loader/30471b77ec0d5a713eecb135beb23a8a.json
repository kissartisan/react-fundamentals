{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.getUrlByRequestOptions = exports.DEFAULT_PATH = void 0;\n\nvar http_1 = require(\"http\");\n\nvar debug = require('debug')('utils getUrlByRequestOptions');\n\nexports.DEFAULT_PATH = '/';\nvar DEFAULT_PROTOCOL = 'http:';\nvar DEFAULT_HOST = 'localhost';\nvar DEFAULT_PORT = 80;\nvar SSL_PORT = 443;\n\nfunction getAgent(options) {\n  return options.agent instanceof http_1.Agent ? options.agent : undefined;\n}\n\nfunction getProtocolByRequestOptions(options) {\n  var _a, _b;\n\n  if (options.protocol) {\n    return options.protocol;\n  }\n\n  var agent = getAgent(options);\n  var agentProtocol = (_a = agent) === null || _a === void 0 ? void 0 : _a.protocol;\n\n  if (agentProtocol) {\n    return agentProtocol;\n  }\n\n  var port = getPortByRequestOptions(options);\n  var isSecureRequest = options.cert || port === SSL_PORT;\n  return isSecureRequest ? 'https:' : ((_b = options.uri) === null || _b === void 0 ? void 0 : _b.protocol) || DEFAULT_PROTOCOL;\n}\n\nfunction getPortByRequestOptions(options) {\n  var _a, _b;\n\n  var agent = getAgent(options);\n  var agentPort = ((_a = agent) === null || _a === void 0 ? void 0 : _a.options.port) || ((_b = agent) === null || _b === void 0 ? void 0 : _b.defaultPort);\n  var optionsPort = options.port;\n\n  if (optionsPort || agentPort) {\n    var explicitPort = optionsPort || agentPort || DEFAULT_PORT;\n    return Number(explicitPort);\n  }\n}\n\nfunction getHostByRequestOptions(options) {\n  return options.hostname || options.host || DEFAULT_HOST;\n}\n\nfunction getAuthByRequestOptions(options) {\n  if (options.auth) {\n    var _a = options.auth.split(':'),\n        username = _a[0],\n        password = _a[1];\n\n    return {\n      username: username,\n      password: password\n    };\n  }\n}\n/**\n * Creates a `URL` instance from a given `RequestOptions` object.\n */\n\n\nfunction getUrlByRequestOptions(options) {\n  debug('request options', options);\n  var protocol = getProtocolByRequestOptions(options);\n  var host = getHostByRequestOptions(options);\n  var port = getPortByRequestOptions(options);\n  var path = options.path || exports.DEFAULT_PATH;\n  var auth = getAuthByRequestOptions(options);\n  debug('protocol', protocol);\n  debug('host', host);\n  debug('port', port);\n  debug('path', path);\n  var baseUrl = protocol + \"//\" + host;\n  debug('base URL:', baseUrl);\n  var url = options.uri ? new URL(options.uri.href) : new URL(path, baseUrl);\n\n  if (port) {\n    debug('detected explicit port', port);\n    url.port = port.toString();\n  }\n\n  if (auth) {\n    debug('resolved auth', auth);\n    url.username = auth.username;\n    url.password = auth.password;\n  }\n\n  debug('created URL:', url);\n  return url;\n}\n\nexports.getUrlByRequestOptions = getUrlByRequestOptions;","map":{"version":3,"sources":["../../src/utils/getUrlByRequestOptions.ts"],"names":[],"mappings":"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","sourceRoot":"","sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.getUrlByRequestOptions = exports.DEFAULT_PATH = void 0;\nvar http_1 = require(\"http\");\nvar debug = require('debug')('utils getUrlByRequestOptions');\nexports.DEFAULT_PATH = '/';\nvar DEFAULT_PROTOCOL = 'http:';\nvar DEFAULT_HOST = 'localhost';\nvar DEFAULT_PORT = 80;\nvar SSL_PORT = 443;\nfunction getAgent(options) {\n    return options.agent instanceof http_1.Agent ? options.agent : undefined;\n}\nfunction getProtocolByRequestOptions(options) {\n    var _a, _b;\n    if (options.protocol) {\n        return options.protocol;\n    }\n    var agent = getAgent(options);\n    var agentProtocol = (_a = agent) === null || _a === void 0 ? void 0 : _a.protocol;\n    if (agentProtocol) {\n        return agentProtocol;\n    }\n    var port = getPortByRequestOptions(options);\n    var isSecureRequest = options.cert || port === SSL_PORT;\n    return isSecureRequest ? 'https:' : ((_b = options.uri) === null || _b === void 0 ? void 0 : _b.protocol) || DEFAULT_PROTOCOL;\n}\nfunction getPortByRequestOptions(options) {\n    var _a, _b;\n    var agent = getAgent(options);\n    var agentPort = ((_a = agent) === null || _a === void 0 ? void 0 : _a.options.port) || ((_b = agent) === null || _b === void 0 ? void 0 : _b.defaultPort);\n    var optionsPort = options.port;\n    if (optionsPort || agentPort) {\n        var explicitPort = optionsPort || agentPort || DEFAULT_PORT;\n        return Number(explicitPort);\n    }\n}\nfunction getHostByRequestOptions(options) {\n    return options.hostname || options.host || DEFAULT_HOST;\n}\nfunction getAuthByRequestOptions(options) {\n    if (options.auth) {\n        var _a = options.auth.split(':'), username = _a[0], password = _a[1];\n        return { username: username, password: password };\n    }\n}\n/**\n * Creates a `URL` instance from a given `RequestOptions` object.\n */\nfunction getUrlByRequestOptions(options) {\n    debug('request options', options);\n    var protocol = getProtocolByRequestOptions(options);\n    var host = getHostByRequestOptions(options);\n    var port = getPortByRequestOptions(options);\n    var path = options.path || exports.DEFAULT_PATH;\n    var auth = getAuthByRequestOptions(options);\n    debug('protocol', protocol);\n    debug('host', host);\n    debug('port', port);\n    debug('path', path);\n    var baseUrl = protocol + \"//\" + host;\n    debug('base URL:', baseUrl);\n    var url = options.uri ? new URL(options.uri.href) : new URL(path, baseUrl);\n    if (port) {\n        debug('detected explicit port', port);\n        url.port = port.toString();\n    }\n    if (auth) {\n        debug('resolved auth', auth);\n        url.username = auth.username;\n        url.password = auth.password;\n    }\n    debug('created URL:', url);\n    return url;\n}\nexports.getUrlByRequestOptions = getUrlByRequestOptions;\n//# sourceMappingURL=getUrlByRequestOptions.js.map"]},"metadata":{},"sourceType":"script"}