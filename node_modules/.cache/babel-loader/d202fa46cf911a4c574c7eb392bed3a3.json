{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nvar HEADERS_INVALID_CHARACTERS = /[^a-z0-9\\-#$%&'*+.^_`|~]/i;\n\nvar Headers =\n/** @class */\nfunction () {\n  function Headers(headers) {\n    var _this = this;\n\n    this.map = {};\n\n    if ((headers === null || headers === void 0 ? void 0 : headers.constructor.name) === 'Headers') {\n      headers.forEach(function (value, name) {\n        _this.append(name, value);\n      }, this);\n    } else if (Array.isArray(headers)) {\n      headers.forEach(function (_a) {\n        var name = _a[0],\n            value = _a[1];\n\n        _this.append(name, Array.isArray(value) ? value.join(', ') : value);\n      });\n    } else if (headers) {\n      Object.getOwnPropertyNames(headers).forEach(function (name) {\n        _this.append(name, headers[name]);\n      });\n    }\n  }\n  /**\n   * Sets a new value for an existing header inside a `Headers` object, or adds the header if it does not already exist.\n   */\n\n\n  Headers.prototype.set = function (name, value) {\n    this.map[this.normalizeName(name)] = this.normalizeValue(value);\n  };\n  /**\n   * Appends a new value onto an existing header inside a `Headers` object, or adds the header if it does not already exist.\n   */\n\n\n  Headers.prototype.append = function (name, value) {\n    name = this.normalizeName(name);\n    value = this.normalizeValue(value);\n    this.map[name] = this.has(name) ? this.map[name] + \", \" + value : value;\n  };\n  /**\n   * Deletes a header from the `Headers` object.\n   */\n\n\n  Headers.prototype[\"delete\"] = function (name) {\n    delete this.map[this.normalizeName(name)];\n    return this;\n  };\n  /**\n   * Returns a `ByteString` sequence of all the values of a header with a given name.\n   */\n\n\n  Headers.prototype.get = function (name) {\n    return this.map[this.normalizeName(name)] || null;\n  };\n  /**\n   * Returns the map of all headers in a `Headers` object.\n   */\n\n\n  Headers.prototype.getAllHeaders = function () {\n    return this.map;\n  };\n  /**\n   * Returns a boolean stating whether a `Headers` object contains a certain header.\n   */\n\n\n  Headers.prototype.has = function (name) {\n    return this.map.hasOwnProperty(this.normalizeName(name));\n  };\n\n  Headers.prototype.forEach = function (callback, thisArg) {\n    for (var name_1 in this.map) {\n      if (this.map.hasOwnProperty(name_1)) {\n        callback.call(thisArg, this.map[name_1], name_1, this);\n      }\n    }\n  };\n\n  Headers.prototype.normalizeName = function (name) {\n    if (typeof name !== 'string') {\n      name = String(name);\n    }\n\n    if (HEADERS_INVALID_CHARACTERS.test(name) || name.trim() === '') {\n      throw new TypeError('Invalid character in header field name');\n    }\n\n    return name.toLowerCase();\n  };\n\n  Headers.prototype.normalizeValue = function (value) {\n    if (typeof value !== 'string') {\n      value = String(value);\n    }\n\n    return value;\n  };\n\n  return Headers;\n}();\n\nexports.Headers = Headers;","map":{"version":3,"sources":["/Users/kissartisan/playground/learn/React/react-fundamentals/node_modules/headers-utils/lib/Headers.js"],"names":["Object","defineProperty","exports","value","HEADERS_INVALID_CHARACTERS","Headers","headers","_this","map","constructor","name","forEach","append","Array","isArray","_a","join","getOwnPropertyNames","prototype","set","normalizeName","normalizeValue","has","get","getAllHeaders","hasOwnProperty","callback","thisArg","name_1","call","String","test","trim","TypeError","toLowerCase"],"mappings":"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","sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar HEADERS_INVALID_CHARACTERS = /[^a-z0-9\\-#$%&'*+.^_`|~]/i;\nvar Headers = /** @class */ (function () {\n    function Headers(headers) {\n        var _this = this;\n        this.map = {};\n        if ((headers === null || headers === void 0 ? void 0 : headers.constructor.name) === 'Headers') {\n            headers.forEach(function (value, name) {\n                _this.append(name, value);\n            }, this);\n        }\n        else if (Array.isArray(headers)) {\n            headers.forEach(function (_a) {\n                var name = _a[0], value = _a[1];\n                _this.append(name, Array.isArray(value) ? value.join(', ') : value);\n            });\n        }\n        else if (headers) {\n            Object.getOwnPropertyNames(headers).forEach(function (name) {\n                _this.append(name, headers[name]);\n            });\n        }\n    }\n    /**\n     * Sets a new value for an existing header inside a `Headers` object, or adds the header if it does not already exist.\n     */\n    Headers.prototype.set = function (name, value) {\n        this.map[this.normalizeName(name)] = this.normalizeValue(value);\n    };\n    /**\n     * Appends a new value onto an existing header inside a `Headers` object, or adds the header if it does not already exist.\n     */\n    Headers.prototype.append = function (name, value) {\n        name = this.normalizeName(name);\n        value = this.normalizeValue(value);\n        this.map[name] = this.has(name) ? this.map[name] + \", \" + value : value;\n    };\n    /**\n     * Deletes a header from the `Headers` object.\n     */\n    Headers.prototype.delete = function (name) {\n        delete this.map[this.normalizeName(name)];\n        return this;\n    };\n    /**\n     * Returns a `ByteString` sequence of all the values of a header with a given name.\n     */\n    Headers.prototype.get = function (name) {\n        return this.map[this.normalizeName(name)] || null;\n    };\n    /**\n     * Returns the map of all headers in a `Headers` object.\n     */\n    Headers.prototype.getAllHeaders = function () {\n        return this.map;\n    };\n    /**\n     * Returns a boolean stating whether a `Headers` object contains a certain header.\n     */\n    Headers.prototype.has = function (name) {\n        return this.map.hasOwnProperty(this.normalizeName(name));\n    };\n    Headers.prototype.forEach = function (callback, thisArg) {\n        for (var name_1 in this.map) {\n            if (this.map.hasOwnProperty(name_1)) {\n                callback.call(thisArg, this.map[name_1], name_1, this);\n            }\n        }\n    };\n    Headers.prototype.normalizeName = function (name) {\n        if (typeof name !== 'string') {\n            name = String(name);\n        }\n        if (HEADERS_INVALID_CHARACTERS.test(name) || name.trim() === '') {\n            throw new TypeError('Invalid character in header field name');\n        }\n        return name.toLowerCase();\n    };\n    Headers.prototype.normalizeValue = function (value) {\n        if (typeof value !== 'string') {\n            value = String(value);\n        }\n        return value;\n    };\n    return Headers;\n}());\nexports.Headers = Headers;\n"]},"metadata":{},"sourceType":"script"}