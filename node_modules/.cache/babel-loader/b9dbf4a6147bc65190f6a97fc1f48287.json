{"ast":null,"code":"function loadDevTools(callback) {\n  // check URL first\n  var url = new URL(window.location);\n  var setInUrl = url.searchParams.has('dev-tools');\n  var urlEnabled = url.searchParams.get('dev-tools') === 'true';\n\n  if (setInUrl) {\n    return urlEnabled ? go() : callback();\n  } // we only want isolated pages to have it if the query param is set\n\n\n  if (url.pathname.startsWith('/isolated')) return callback(); // the check localStorage\n\n  var localStorageValue = window.localStorage.getItem('dev-tools');\n  var setInLocalStorage = localStorageValue != undefined;\n\n  if (setInLocalStorage) {\n    return localStorageValue === 'true' ? go() : callback();\n  } // the default is off in Cypress\n\n\n  if (window.Cypress) return callback(); // the default is on in development\n\n  if (process.env.NODE_ENV === 'development') return go();\n  return callback();\n\n  function go() {\n    // use a dynamic import so the dev-tools code isn't bundled with the regular\n    // app code so we don't worry about bundle size.\n    import('./dev-tools.js').then(function (devTools) {\n      return devTools.install();\n    }).finally(callback);\n  }\n}\n/*\neslint\n  eqeqeq: \"off\",\n*/\n\n\nexport { loadDevTools };","map":{"version":3,"sources":["/Users/kissartisan/playground/learn/React/react-fundamentals/node_modules/@kentcdodds/react-workshop-app/dev-tools-build/dist/esm/load.js"],"names":["loadDevTools","callback","url","URL","window","location","setInUrl","searchParams","has","urlEnabled","get","go","pathname","startsWith","localStorageValue","localStorage","getItem","setInLocalStorage","undefined","Cypress","process","env","NODE_ENV","then","devTools","install","finally"],"mappings":"AAAA,SAASA,YAAT,CAAsBC,QAAtB,EAAgC;AAC9B;AACA,MAAIC,GAAG,GAAG,IAAIC,GAAJ,CAAQC,MAAM,CAACC,QAAf,CAAV;AACA,MAAIC,QAAQ,GAAGJ,GAAG,CAACK,YAAJ,CAAiBC,GAAjB,CAAqB,WAArB,CAAf;AACA,MAAIC,UAAU,GAAGP,GAAG,CAACK,YAAJ,CAAiBG,GAAjB,CAAqB,WAArB,MAAsC,MAAvD;;AAEA,MAAIJ,QAAJ,EAAc;AACZ,WAAOG,UAAU,GAAGE,EAAE,EAAL,GAAUV,QAAQ,EAAnC;AACD,GAR6B,CAQ5B;;;AAGF,MAAIC,GAAG,CAACU,QAAJ,CAAaC,UAAb,CAAwB,WAAxB,CAAJ,EAA0C,OAAOZ,QAAQ,EAAf,CAXZ,CAW+B;;AAE7D,MAAIa,iBAAiB,GAAGV,MAAM,CAACW,YAAP,CAAoBC,OAApB,CAA4B,WAA5B,CAAxB;AACA,MAAIC,iBAAiB,GAAGH,iBAAiB,IAAII,SAA7C;;AAEA,MAAID,iBAAJ,EAAuB;AACrB,WAAOH,iBAAiB,KAAK,MAAtB,GAA+BH,EAAE,EAAjC,GAAsCV,QAAQ,EAArD;AACD,GAlB6B,CAkB5B;;;AAGF,MAAIG,MAAM,CAACe,OAAX,EAAoB,OAAOlB,QAAQ,EAAf,CArBU,CAqBS;;AAEvC,MAAImB,OAAO,CAACC,GAAR,CAAYC,QAAZ,KAAyB,aAA7B,EAA4C,OAAOX,EAAE,EAAT;AAC5C,SAAOV,QAAQ,EAAf;;AAEA,WAASU,EAAT,GAAc;AACZ;AACA;AACA,WAAO,gBAAP,EAAyBY,IAAzB,CAA8B,UAAUC,QAAV,EAAoB;AAChD,aAAOA,QAAQ,CAACC,OAAT,EAAP;AACD,KAFD,EAEGC,OAFH,CAEWzB,QAFX;AAGD;AACF;AACD;AACA;AACA;AACA;;;AAEA,SAASD,YAAT","sourcesContent":["function loadDevTools(callback) {\n  // check URL first\n  var url = new URL(window.location);\n  var setInUrl = url.searchParams.has('dev-tools');\n  var urlEnabled = url.searchParams.get('dev-tools') === 'true';\n\n  if (setInUrl) {\n    return urlEnabled ? go() : callback();\n  } // we only want isolated pages to have it if the query param is set\n\n\n  if (url.pathname.startsWith('/isolated')) return callback(); // the check localStorage\n\n  var localStorageValue = window.localStorage.getItem('dev-tools');\n  var setInLocalStorage = localStorageValue != undefined;\n\n  if (setInLocalStorage) {\n    return localStorageValue === 'true' ? go() : callback();\n  } // the default is off in Cypress\n\n\n  if (window.Cypress) return callback(); // the default is on in development\n\n  if (process.env.NODE_ENV === 'development') return go();\n  return callback();\n\n  function go() {\n    // use a dynamic import so the dev-tools code isn't bundled with the regular\n    // app code so we don't worry about bundle size.\n    import('./dev-tools.js').then(function (devTools) {\n      return devTools.install();\n    }).finally(callback);\n  }\n}\n/*\neslint\n  eqeqeq: \"off\",\n*/\n\nexport { loadDevTools };\n"]},"metadata":{},"sourceType":"module"}